import functions as func
import telebot
import os

token = '6293487861:AAGDY7-kNgR1tzWpyp2SJDBTOsHQJkOa0_M' #t.me/buildYourPC_bot
bot = telebot.TeleBot(token)

btnBuild = telebot.types.KeyboardButton("üñ• –°–æ–±—Ä–∞—Ç—å –ü–ö")
btnModes = telebot.types.KeyboardButton("üìÑ –ú–æ–¥—ã")
btnModeFirst = telebot.types.KeyboardButton("ü•á –õ—É—á—à–∏–π")
btnModeQueue = telebot.types.KeyboardButton("üîé –û—á–µ—Ä–µ–¥—å")
btnModeRandom = telebot.types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º")
btnSettings = telebot.types.KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
btnGaming = telebot.types.KeyboardButton("üéÆ –ì–µ–π–º–∏–Ω–≥")
btnWorking = telebot.types.KeyboardButton("üíª –†–∞–±–æ—Ç–∞")
btnGraphics = telebot.types.KeyboardButton("üé• –ì—Ä–∞—Ñ–∏–∫–∞")

btnSum1 = telebot.types.KeyboardButton("50000")
btnSum2 = telebot.types.KeyboardButton("100000")
btnSum3 = telebot.types.KeyboardButton("150000")
markupPrices = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
markupPrices.add(btnSum1, btnSum2, btnSum3)

markupMain = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
markupMain.add(btnBuild, btnSettings, btnModes)

markupBuildCFG = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
markupBuildCFG.add(btnGaming, btnGraphics, btnWorking)

markupModes = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
markupModes.add(btnModeFirst, btnModeQueue, btnModeRandom)

print('BOT STARTED')

@bot.message_handler(commands=['start'])
def start(message):
    try:
        if not os.path.exists(f'{os.getcwd()}\\userdata\\{message.chat.id}'):
            os.makedirs(f'{os.getcwd()}\\userdata\\{message.chat.id}')
    except:
        pass
    bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ PC Builder ‚Äì –±–æ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –Ω–∞ –ª—é–±–æ–π –±—é–¥–∂–µ—Ç.', reply_markup=markupMain)
    # if f'{os.getcwd()}\\userdata\\{message.chat.id}\\name.txt' not in os.listdir(f'{os.getcwd()}\\userdata\\{message.chat.id}'):
    #     with open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\name.txt', 'a+') as nameWr:
    #         nameWr.write(f'Username: {message.from_user.username}\nName: {message.from_user.first_name} {message.from_user.last_name}')
    #         nameWr.close()


@bot.message_handler(commands=['info', 'help'])
def help_menu(message):
    bot.send_message(message.chat.id, '–¢–µ–±–µ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–º–æ–∂–µ—Ç')

@bot.message_handler(content_types=['text'])
def text(message):
    if message.text == btnBuild.text:
        msg = bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–≤–æ–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π, –º–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å —Ç–≤–æ–π –±—é–¥–∂–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä, –≤ —Ñ–æ—Ä–º–∞—Ç–µ "XXXXX —Ä—É–±–ª–µ–π" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "50000 —Ä—É–±–ª–µ–π"). –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç—ã —É–∫–∞–∂–µ—à—å –±—é–¥–∂–µ—Ç, —è –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è –ª—É—á—à—É—é –≤–æ–∑–º–æ–∂–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ü–ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–≤–æ–∏–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏.', reply_markup=markupPrices)
        bot.register_next_step_handler(msg, set_priceStep)
        #–°—é–¥–∞ –∑–∞–ø–∏—Ö–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±–æ—Ä–∫–∏, –ø–µ—Ä–µ–¥ —ç—Ç–∏–º —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    elif message.text == btnModes.text:
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º', reply_markup=markupModes)
        bot.register_next_step_handler(msg, setMode)

    elif message.text == btnSettings.text:
        pass
        #–º–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∑–∞–ø–∞—Ä–Ω–æ, –Ω–æ –∏–¥–µ—è —É–∂–µ –µ—Å—Ç—å
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –∏—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø–æ–º–æ—â–∏ –∏–ª–∏ /start –¥–ª—è –∫–Ω–æ–ø–æ–∫')

def setMode(message):
    if not os.path.exists(f'{os.getcwd()}\\userdata\\{message.chat.id}'):
        os.makedirs(f'{os.getcwd()}\\userdata\\{message.chat.id}')
    with open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\mode.txt', 'w+') as file:
        if message.text == btnModeFirst.text:
            file.write('first')
            bot.send_message(message.chat.id, btnModeFirst.text, reply_markup=markupMain)
            file.close()
        elif message.text == btnModeQueue.text:
            file.write('queue')
            bot.send_message(message.chat.id, btnModeQueue.text, reply_markup=markupMain)
            file.close()
        else:
            file.write('random')
            bot.send_message(message.chat.id, btnModeRandom.text, reply_markup=markupMain)
            file.close()

def set_priceStep(message):
    try:
        if not os.path.exists(f'{os.getcwd()}\\userdata\\{message.chat.id}'):
            os.makedirs(f'{os.getcwd()}\\userdata\\{message.chat.id}')
        with open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\price.txt', 'a+') as f:
            f.write(message.text.strip())
            f.close()
        msg = bot.send_message(message.chat.id, '–û–∫, –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è –¥–ª—è —á–µ–≥–æ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –ü–ö', reply_markup=markupBuildCFG)
        bot.register_next_step_handler(msg, set_cfgStep)
    except Exception as e:
        bot.send_message(message.chat.id, '–£–ø—Å, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ')

def set_cfgStep(message):
    with open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\cfg.txt', 'a+') as f:
        if message.text == btnGaming.text:
            f.write("Gaming")
        elif message.text == btnGraphics.text:
            f.write("Graphics")
        elif message.text == btnWorking.text:
            f.write("Working")
        else:
            bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é')
            f.close()
            text(message)
        f.close()


    bld = func.Build(sum_price=int(open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\price.txt', 'r').read()), cfg=open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\cfg.txt', 'r').read())
    bld.set_price()
    bot.send_message(message.chat.id, f'''–†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã:
    –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞ –¥–æ {bld.motherboard_price[1]} —Ä—É–±
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–æ {bld.cpu_price[1]} —Ä—É–±
    –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –¥–æ {bld.gpu_price[1]} —Ä—É–±
    –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å –¥–æ {bld.rom_price[1]} —Ä—É–±
    –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å –¥–æ {bld.ram_price[1]} —Ä—É–±
    –ë–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è –¥–æ {bld.psu_price[1]} —Ä—É–±
    ''', reply_markup=markupMain)
    try:
        builder = func.Build(sum_price=int(open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\price.txt', 'r').read()),
                             cfg=open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\cfg.txt', 'r').read(),
                             mode=open(f'{os.getcwd()}\\userdata\\{message.chat.id}\\mode.txt', 'r').read())
        builder.set_price()
        builder.build()
        
        bot.send_message(message.chat.id, builder.out())
    except:
        bot.send_message(message.chat.id, '–ö–∞–∂–µ—Ç—Å—è –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ü–µ–Ω—ã –Ω–µ—Ç —Å–±–æ—Ä–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç')
        text(message)
    try:
        os.remove(f'{os.getcwd()}\\userdata\\{message.chat.id}\\cfg.txt')
        os.remove(f'{os.getcwd()}\\userdata\\{message.chat.id}\\price.txt')
    except Exception as e:
        print(e)
    

bot.polling(non_stop=True)